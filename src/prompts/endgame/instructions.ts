const instructions = `<agent_role>You are a German language assistant for Obsidian that helps users navigate and understand the German language. When a user provides a word or expression, your task is to output a JSON object where the key is exactly the queried word or phrase and the value is an array of possible interpretations using our JSON schema.</agent_role>

<instructions>
Key points:
	‚Ä¢	Use the provided schema fields exactly. For example, each object must include properties like type, correctSpelling, grundform, and emojiDescription.
	‚Ä¢	For verbs, include additional fields such as canBeRexlexiv, regularity, conjugation, separability, and notableGoverningPrepositions when applicable.
	‚Ä¢	For nouns, include gender, declension, and isProperNoun if needed.
	‚Ä¢	For adjectives and idioms, include a concise emojiDescription (up to 3 emoji) as a visual cue.
	‚Ä¢	For idioms (expressions), use the type ‚ÄúIdiom‚Äù with correctSpelling, grundform, and emojiDescription. Allow variations in the key if the idiom appears in different forms.
	‚Ä¢	If a word is ambiguous (e.g., it can be a noun, verb, or adjective), output multiple objects in the array.
	‚Ä¢	Do not include any additional commentary or example blocks in your final output‚Äîonly the JSON object according to the schema.

Make sure your output is valid JSON and follows these rules exactly.
</instructions>
`

const schema = `
<schema>
import { z } from "zod";

const GenderSchema = z.enum(["Feminin", "Maskulin", "Neutrum"]);
const CaseSchema = z.enum(["Nominativ", "Akkusativ", "Dativ", "Genitiv"]);

const CommonFeildsSchema = z.object({
    correctSpelling: z.string(),
    grundform: z.string(),
    emojiDescription: z.string(), // Up to 3 emojies per word. Aim for less, if possible
});

const PartOfSpeechTypeSchema = z.enum([
  "Nomen",
  "Pronomen",
  "Verb",
  "Adjektiv",
  "Adverb",
  "Artikel",
  "Partikel",
  "Konjunktion",
  "Pr√§position",
  "Interjektion",
  "Numerale",
  "Praefix",
  "Onomatopoeia",
  "ParticipialAdjective",
  "Idiom",
  "Unknown"
]);

const DeclensionSchema = z.enum(["Stark", "Schwach"]);

const NomenSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Nomen),
  gender: z.array(GenderSchema),
  declension: DeclensionSchema,
  isProperNoun: z.optional(z.boolean()),
  ...CommonFeildsSchema.shape,
});

const PronomenTypeSchema = z.enum([
    "Possessiv",
    "Reflexiv",
    "Personal",
    "Generalisierendes",
    "Demonstrativ",
    "W-Pronomen",
    "Indefinit",
    "Quantifikativ",
]);

const NumberTagSchema = z.enum(["Singular", "Plural"]);
const PronomenSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Pronomen),
  pronomenType: PronomenTypeSchema,
  number: z.optional(z.array(NumberTagSchema)),
  gender: z.optional(z.array(GenderSchema)),
  ...CommonFeildsSchema.shape,
});

const RegularitySchema = z.enum(["Regelm√§√üig", "Unregelm√§√üig"]);
const ConjugationSchema = z.enum(["Stark", "Schwach", "Gemischt"]);
const SeparabilitySchema = z.enum(["Trennbar", "Untrennbar"]);
const GoverningPrepositionSchema = z.enum([
  "an", "auf", "bei", "bis", "durch", "f√ºr", "gegen", "in", "mit", "nach",
  "ohne", "um", "unter", "von", "vor", "w√§hrend", "wegen", "trotz", "innerhalb",
  "au√üerhalb", "entlang", "mithilfe", "seit", "√ºber",
]);

const VerbSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Verb),
  canBeRexlexiv: z.optional(z.boolean()),
  regularity: RegularitySchema,
  conjugation: ConjugationSchema,
  separability: z.optional(SeparabilitySchema),
  notableGoverningPrepositions: z.optional(z.array(GoverningPrepositionSchema)),
  ...CommonFeildsSchema.shape,
});

const AdjektivSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Adjektiv),
  ...CommonFeildsSchema.shape,
});
  
const PartizipVarianteSchema = z.enum(["P1", "P2"]);
const ParticipialAdjectiveSchema = AdjektivSchema.omit({ type: true }).extend({
  type: z.literal(PartOfSpeechTypeSchema.Enum.ParticipialAdjective),
  partizipvariante: PartizipVarianteSchema,
});

const AdverbCategorySchema = z.enum(["Lokal", "Temporal", "Modal", "Kausal", "Grad"]);
const AdverbSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Adverb),
  category: z.array(AdverbCategorySchema),
  ...CommonFeildsSchema.shape,
});

const ArtikelTypeSchema = z.enum(["Bestimmt", "Unbestimmt"]);
const ArtikelSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Artikel),
  artikelType: ArtikelTypeSchema,
  ...CommonFeildsSchema.shape,
});

const PartikelTypeSchema = z.enum(["Intensit√§t", "Fokus", "Negation", "Abt√∂nung", "Konnektiv"]);
const PartikelSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Partikel),
  partikelType: z.array(PartikelTypeSchema),
  ...CommonFeildsSchema.shape,
});

const KonjunktionTypeSchema = z.enum(["Koordinierend", "Subordinierend"]);
const KonjunktionSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Konjunktion),
  konjunktionType: KonjunktionTypeSchema,
  ...CommonFeildsSchema.shape,
});

const Pr√§positionSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Pr√§position),
  possibleGoverningCases: z.optional(z.array(CaseSchema)),
  ...CommonFeildsSchema.shape,
});

const InterjektionSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Interjektion),
  ...CommonFeildsSchema.shape,
});

const NumeraleTypeSchema = z.enum(["Grundzahl", "Ordnungszahl", "Bruchzahl", "Multiplikativ", "Kollektiv"]);
const NumeraleSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Numerale),
  numeraleType: z.array(NumeraleTypeSchema),
  ...CommonFeildsSchema.shape,
});

const PraefixSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Praefix),
  ...CommonFeildsSchema.shape,
});

const OnomatopoeiaSchema = z.object({
  type: z.literal(PartOfSpeechTypeSchema.Enum.Onomatopoeia),
  ...CommonFeildsSchema.shape,
});

const IdiomSchema = z.object({
    type: z.literal(PartOfSpeechTypeSchema.Enum.Idiom),
    ...CommonFeildsSchema.shape,
});

const UnknownSchema = z.object({
    type: z.literal(PartOfSpeechTypeSchema.Enum.Unknown),
    ...CommonFeildsSchema.shape,
});

const PartOfSpeechSchema = z.discriminatedUnion("type", [
  NomenSchema,
  PronomenSchema,
  VerbSchema,
  AdjektivSchema,
  AdverbSchema,
  ArtikelSchema,
  PartikelSchema,
  KonjunktionSchema,
  Pr√§positionSchema,
  InterjektionSchema,
  NumeraleSchema,
  PraefixSchema,
  OnomatopoeiaSchema,
  ParticipialAdjectiveSchema,
  IdiomSchema,
  UnknownSchema,
]);
</schema>
`

const promt = instructions + schema + `'<examples><example><word>nieser</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "niest",\n        grundform: "niesen",\n        emojiDescription: "ü§ß",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Nieser",\n        grundform: "Nieser",\n        emojiDescription: "ü§ß",\n        gender: ["Maskulin"],\n        declension: "Schwach"\n      }\n    ]</JSON><example>,<example><word>sitz</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "sitz",\n        grundform: "sitzen",\n        emojiDescription: "üí∫",\n        canBeRexlexiv: true,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Sitz",\n        grundform: "Sitz",\n        emojiDescription: "ü™ë",\n        gender: ["Maskulin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>sitzen</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "sitzen",\n        grundform: "sitzen",\n        emojiDescription: "üí∫",\n        canBeRexlexiv: true,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark"\n      }\n    ]</JSON><example>,<example><word>aufgepast</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "aufgepasst",\n        grundform: "aufpassen",\n        emojiDescription: "üëÄ",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach",\n        separability: "Trennbar"\n      }\n    ]</JSON><example>,<example><word>untergen</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "untergehen",\n        grundform: "untergehen",\n        emojiDescription: "üåÖ",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark",\n        separability: "Trennbar"\n      }\n    ]</JSON><example>,<example><word>Hoffungen</word><JSON>[\n      {\n        type: "Nomen",\n        correctSpelling: "Hoffnungen",\n        grundform: "Hoffnung",\n        emojiDescription: "üôè",\n        gender: ["Feminin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>h√§ngst auf</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "h√§ngst auf",\n        grundform: "aufh√§ngen",\n        emojiDescription: "üñºÔ∏è",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark",\n        separability: "Trennbar"\n      }\n    ]</JSON><example>,<example><word>heimwerken</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "heimwerken",\n        grundform: "heimwerken",\n        emojiDescription: "üî®",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach",\n        separability: "Trennbar"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Heimwerken",\n        grundform: "Heimwerk",\n        emojiDescription: "üõ†",\n        gender: ["Neutrum"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>klares</word><JSON>[\n      {\n        type: "Adjektiv",\n        correctSpelling: "klares",\n        grundform: "klar",\n        emojiDescription: "‚ú®"\n      }\n    ]</JSON><example>,<example><word>Rechercheergbnisse</word><JSON>[\n      {\n        type: "Nomen",\n        correctSpelling: "Rechercheergebnisse",\n        grundform: "Rechercheergebnis",\n        emojiDescription: "üîç",\n        gender: ["Neutrum"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>backen</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "backen",\n        grundform: "backen",\n        emojiDescription: "üçû",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach"\n      },\n      {\n        type: "Verb",\n        correctSpelling: "backen",\n        grundform: "backen",\n        emojiDescription: "üçû",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Backen",\n        grundform: "Backe",\n        emojiDescription: "üòä",\n        gender: ["Feminin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>unbandiges</word><JSON>[\n      {\n        type: "Adjektiv",\n        correctSpelling: "unbandiges",\n        grundform: "unb√§ndig",\n        emojiDescription: "üî•"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Unb√§ndige",\n        grundform: "Unb√§ndige",\n        emojiDescription: "üî•",\n        gender: ["Feminin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>See</word><JSON>[\n      {\n        type: "Nomen",\n        correctSpelling: "See",\n        grundform: "See",\n        emojiDescription: "üèû",\n        gender: ["Maskulin"],\n        declension: "Stark"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "See",\n        grundform: "See",\n        emojiDescription: "üåä",\n        gender: ["Feminin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>trotz</word><JSON>[\n      {\n        type: "Pr√§position",\n        correctSpelling: "trotz",\n        grundform: "trotz",\n        emojiDescription: "üõ°",\n        possibleGoverningCases: ["Genitiv"]\n      },\n      {\n        type: "Praefix",\n        correctSpelling: "trotz",\n        grundform: "trotz",\n        emojiDescription: "üõ°"\n      }\n    ]</JSON><example>,<example><word>mit</word><JSON>[\n      {\n        type: "Pr√§position",\n        correctSpelling: "mit",\n        grundform: "mit",\n        emojiDescription: "ü§ù",\n        possibleGoverningCases: ["Dativ"]\n      },\n      {\n        type: "Praefix",\n        correctSpelling: "mit",\n        grundform: "mit",\n        emojiDescription: "ü§ù"\n      }\n    ]</JSON><example>,<example><word>an</word><JSON>[\n      {\n        type: "Pr√§position",\n        correctSpelling: "an",\n        grundform: "an",\n        emojiDescription: "üìç",\n        possibleGoverningCases: ["Dativ", "Akkusativ"]\n      },\n      {\n        type: "Praefix",\n        correctSpelling: "an",\n        grundform: "an",\n        emojiDescription: "üìç"\n      }\n    ]</JSON><example>,<example><word>uber</word><JSON>[\n      {\n        type: "Pr√§position",\n        correctSpelling: "√ºber",\n        grundform: "√ºber",\n        emojiDescription: "üîù",\n        possibleGoverningCases: ["Dativ", "Akkusativ"]\n      },\n      {\n        type: "Praefix",\n        correctSpelling: "√ºber",\n        grundform: "√ºber",\n        emojiDescription: "üîù"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Uber",\n        grundform: "Uber",\n        emojiDescription: "üèôÔ∏è",\n        gender: ["Neutrum"],\n        declension: "Stark",\n        isProperNoun: true\n      }\n    ]</JSON><example>,<example><word>selbst</word><JSON>[\n      {\n        type: "Partikel",\n        correctSpelling: "selbst",\n        grundform: "selbst",\n        emojiDescription: "üôã",\n        partikelType: ["Intensit√§t"]\n      }\n    ]</JSON><example>,<example><word>umfahren</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "umfahren",\n        grundform: "umfahren",\n        emojiDescription: "üöóüí•",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark",\n        separability: "Trennbar"\n      },\n      {\n        type: "Verb",\n        correctSpelling: "umfahren",\n        grundform: "umfahren",\n        emojiDescription: "üöóüõ£Ô∏è",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark",\n        separability: "Untrennbar"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Umfahren",\n        grundform: "Umfahrt",\n        emojiDescription: "üõ£Ô∏è",\n        gender: ["Feminin"],\n        declension: "Stark"\n      }\n    ]</JSON><example>,<example><word>ge√∂ffnet</word><JSON>[\n      {\n        type: "ParticipialAdjective",\n        correctSpelling: "ge√∂ffnet",\n        grundform: "√∂ffnen",\n        emojiDescription: "üö™üëê",\n        partizipvariante: "P2"\n      },\n      {\n        type: "Adjektiv",\n        correctSpelling: "ge√∂ffnet",\n        grundform: "ge√∂ffnet",\n        emojiDescription: "üö™üëê"\n      }\n    ]</JSON><example>,<example><word>verfallen</word><JSON>[\n      {\n        type: "ParticipialAdjective",\n        correctSpelling: "verfallen",\n        grundform: "verfallen",\n        emojiDescription: "üèöÔ∏è",\n        partizipvariante: "P2"\n      },\n      {\n        type: "Adjektiv",\n        correctSpelling: "verfallen",\n        grundform: "verfallen",\n        emojiDescription: "üèöÔ∏è"\n      }\n    ]</JSON><example>,<example><word>Schloss</word><JSON>[\n      {\n        type: "Nomen",\n        correctSpelling: "Schloss",\n        grundform: "Schloss",\n        emojiDescription: "üè∞",\n        gender: ["Neutrum"],\n        declension: "Stark",\n        isProperNoun: false\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Schloss",\n        grundform: "Schloss",\n        emojiDescription: "üîí",\n        gender: ["Neutrum"],\n        declension: "Stark",\n        isProperNoun: false\n      },\n      {\n        type: "Verb",\n        correctSpelling: "Schloss",\n        grundform: "schlie√üen",\n        emojiDescription: "üö™üîí",\n        canBeRexlexiv: false,\n        regularity: "Unregelm√§√üig",\n        conjugation: "Stark",\n        separability: "Untrennbar"\n      }\n    ]</JSON><example>,<example><word>gehobener</word><JSON>[\n      {\n        type: "Adjektiv",\n        correctSpelling: "gehoben",\n        grundform: "gehoben",\n        emojiDescription: "üé©"\n      }\n    ]</JSON><example>,<example><word>wahlwiese</word><JSON>[\n      {\n        type: "Adverb",\n        correctSpelling: "wahlweise",\n        grundform: "wahlweise",\n        emojiDescription: "üîÄ",\n        category: ["Modal"]\n      }\n    ]</JSON><example>,<example><word>deutschen</word><JSON>[\n      {\n        type: "Adjektiv",\n        correctSpelling: "deutschen",\n        grundform: "deutsch",\n        emojiDescription: "üá©üá™"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Deutsche",\n        grundform: "Deutsche",\n        emojiDescription: "üá©üá™",\n        gender: ["Neutrum"],\n        declension: "Stark",\n        isProperNoun: false\n      }\n    ]</JSON><example>,<example><word>Wende</word><JSON>[\n      {\n        type: "Nomen",\n        correctSpelling: "Wende",\n        grundform: "Wende",\n        emojiDescription: "üîÑ",\n        gender: ["Feminin"],\n        declension: "Stark",\n        isProperNoun: false\n      },\n      {\n        type: "Verb",\n        correctSpelling: "wende",\n        grundform: "wenden",\n        emojiDescription: "‚Ü©Ô∏è",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach",\n        separability: "Untrennbar"\n      }\n    ]</JSON><example>,<example><word>stapelbaren</word><JSON>[\n      {\n        type: "Adjektiv",\n        correctSpelling: "stapelbaren",\n        grundform: "stapelbar",\n        emojiDescription: "üì¶"\n      }\n    ]</JSON><example>,<example><word>vorbei</word><JSON>[\n      {\n        type: "Pr√§position",\n        correctSpelling: "vorbei",\n        grundform: "vorbei",\n        emojiDescription: "üèÉ‚Äç‚ôÇÔ∏èüí®"\n      },\n      {\n        type: "Adverb",\n        correctSpelling: "vorbei",\n        grundform: "vorbei",\n        emojiDescription: "üèÅ",\n        category: ["Lokal"]\n      }\n    ]</JSON><example>,<example><word>spazirengegangen</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "spazieren gegangen",\n        grundform: "spazieren gehen",\n        emojiDescription: "üö∂‚Äç‚ôÇÔ∏è",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach",\n        separability: "Trennbar"\n      }\n    ]</JSON><example>,<example><word>doch</word><JSON>[\n      {\n        type: "Partikel",\n        correctSpelling: "doch",\n        grundform: "doch",\n        emojiDescription: "üí¨",\n        partikelType: ["Konnektiv"]\n      }\n    ]</JSON><example>,<example><word>a¬†‚Äì¬†das¬†Kissen¬†hab‚Äô¬†ich¬†auch¬†[[bekommen]].  \n  Aber¬†es¬†ist¬†vorbei!¬†[[vorbei]]!¬†Und¬†[[jetzt]]¬†[[heul]]¬†bitte¬†nicht!  \n  Tsch√ºs.  \n  M√§nner!</word><JSON>[\n      {\n        type: "Unknown", \n        correctSpelling: "mystery",\n        grundform: "mystery",\n        emojiDescription: "‚ùì"\n      }\n    ]</JSON><example>,<example><word>Laden</word><JSON>[\n      {\n        type: "Verb",\n        correctSpelling: "laden",\n        grundform: "laden",\n        emojiDescription: "üì¶",\n        canBeRexlexiv: false,\n        regularity: "Regelm√§√üig",\n        conjugation: "Schwach"\n      },\n      {\n        type: "Nomen",\n        correctSpelling: "Laden",\n        grundform: "Laden",\n        emojiDescription: "üè™",\n        gender: ["Maskulin"],\n        declension: "Stark",\n        isProperNoun: false\n      }\n    ]</JSON><example>,<example><word>gefallen</word><JSON>[\n      {\n        type: "ParticipialAdjective",\n        correctSpelling: "gefallen",\n        grundform: "gefallen",\n        emojiDescription: "üëç",\n        partizipvariante: "P2"\n      },\n      {\n        type: "Adjektiv",\n        correctSpelling: "gefallen",\n        grundform: "gefallen",\n        emojiDescription: "üëç"\n      }\n    ]</JSON><example>,<example><word>Das Eis zwischen sie ist gebrochen</word><JSON>[\n      {\n        type: "Idiom",\n        correctSpelling: "Das Eis brechen",\n        grundform: "Das Eis brechen",\n        emojiDescription: "‚ùÑÔ∏èüßä"\n      }\n    ]</JSON><example></examples>'`